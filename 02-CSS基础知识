<!-- 
    css样式
    1.内部样式表
    2.外部样式表
    3.内联样式表(行内样式，嵌入式样式)
    注意:如果样式没有使用内联，那么内部或外部样子表谁放在最下面，就使用谁的，并不是优先使用内部样式表
 -->
 <!-- 1.内部样式表 -->
 <!-- 格式：一般写在header头部里面 -->
 <style type="text/css">
     /*css语句 */
 </style>

 <!-- 2.外部样式表 -->
 <link rel="stylesheet" href="css/ceshi.css" type="text/css">
 和
 <!-- 早期的引入方式，现在基本不用 -->
 <!-- <style>
     @import url("text/css");
 </style> -->

 <!-- 
     3.内联样式表 
     <p style="属性：属性值;属性：属性值"></p>
    -->

<!-- 
    CSS语法:
    selector {property:value;property:value;...}
    说明：
    1.每一个css样式由3个部分组成：选择器、属性和属性值。
    2.属性必须放在 {} 花括号中，属性和属性值用冒号连接。
    3.每条声明用分号结束。
    4.当一个属性有多个属性值的时候，属性值与属性值不分先后顺序。
    5.在书写样式过程中，空格、换行等操作不影响属性显示。
 -->

<!-- 
    一、简单属性使用
    1.color:颜色
        规定颜色值为单词名称例如：red,blue或者16进制值的颜色如：#ff0000或者为rgb值的颜色如：rgb(255,0,0)
    2.width:宽度
        设置元素的宽度值，值为数字：单位为px(像素)、em(字符)、%(百分比)；默认值为auto(自动，通过浏览器自动计算出宽度值单位为像素)
        像素值决定元素或文字在浏览器中显示的大小或位置，页面中的最小计算单位为1个像素，即1px
    3.heigth：高度
        设置元素的高度值，值为数字：单位为px(像素)、em(字符)、%(百分比)；默认值为auto(自动，通过浏览器自动计算出宽度值单位为像素)
    4.background-color:背景颜色
        背景颜色：规定颜色值为单词名称例如：red,blue或者16进制值的颜色如：#ff0000或者为rgb值的颜色如：rgb(255,0,0)
        可以为所有元素设置背景色，这包括body一直到em和a等行内元素
 -->



<!-- 
    二、标签分类
        标签从表面上分为单标签和双标签，单标签功能单一，不能嵌套；双标签功能多样化，可以嵌套。
        标签又分为块级元素和内联元素（行内元素）。

        (1.)块元素(block element)
            说明：
            默认情况，块级元素都会占一行，通俗的说，两个块级元素不会出现并列显示的现象;默认情况下，块级元素会按顺序自上而下排列
            块级元素都可以定义自己的宽度与高度，不设置宽度的时候，默认与父级元素一样宽。
            块级元素一般作为其它元素的容器，它可以容纳其它内联元素和其它块元素，可以把这种容器比喻为一个盒子。
            特殊说明：
            <p>为段落标签，一般用于装载段落文字，并且p标签中不可以包含块级元素<h1-h6>
            <div>为最常用的结构元素，常被用于分割页面区域，以及功能模块
        
            div - 常用块级容易，也是css layout的主要标签
            form - 交互表单
            h1 - 大标题
            h2 - 副标题
            h3 - 3级标题
            h4 - 4级标题
            h5 - 5级标题
            h6 - 6级标题
            hr - 水平分隔线
            table - 表格
            tr -  行
            td -  列
            hr - 水平线
            ul - 非排序列表
            li -
            ol - 排序表单
            dl - 定义列表
            dt -
            dd -
            p - 段落
            isindex - input prompt
            menu - 菜单列表
            noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容
            noscript - ）可选脚本内容（对于不支持script的浏览器显示此内容）
            pre - 格式化文本
            address - 地址
            blockquote - 块引用
            center - 举中对齐块
            dir - 目录列表
            fieldset - form控制组

        (2.)内联元素（行内元素）内联元素(inline)
        说明：
            内联元素的表现形式是始终以行内逐个进行显示；
            内联元素没有自己的形状，不能定义它的宽度和高度，宽和高只能根据所包含内容的宽度跟高度来确定，它的最小内容单元也会呈现矩形形状
            内联元素也会遵循盒模型基本规则，如可以定义padding,bordow,margin,background等属性,但个别属性不能正确显示，对于盒子模型属性部分支持 

            span - 常用内联容器，定义文本内区块
            a - 锚点
            b - 粗体(不推荐)
            strong - 粗体强调
            br - 换行
            em - 强调
            i - 斜体
            u - 下划线
            label - 表格标签
            font - 字体设定(不推荐)
            bdo - bidi override
            big - 大字体
            cite - 引用
            code - 计算机代码(在引用源码的时候需要)
            dfn - 定义字段
            kbd - 定义键盘文本
            q - 短引用
            s - 中划线(不推荐)
            samp - 定义范例计算机代码
            small - 小字体文本
            strike - 中划线
            sub - 下标
            sup - 上标
            tt - 电传文本
            var - 定义变量
            abbr - 缩写
            acronym - 首字

        (3.)内联块级元素(行内块级元素)(inline-block)
        说明：
            内联块也叫行内块级元素是块级元素和内联元素的混合体（inline-block）元素可以设置宽度和高度
            内联块级元素属于内联元素，不会独占一行，而是会和其它的内联(inline)元素和内联块元素(inline-block)同在一行按从左到右的顺序显示
            例如：内联块级元素的使用场合：导航菜单

            img - 图片
            input - 输入框
            select - 项目选择
            textarea -
            iframe -
        
        (4.)可变元素:根据上下文语境决定该元素为块元素或者内联元素。
            applet - java applet
            button - 按钮
            del - 删除文本
            iframe - inline frame
            ins - 插入的文本
            map - 图片区块(map)
            object - object对象
            script - 客户端脚本

        (5.)元素类型之间转换:
            block   此元素将显示为块级元素，此元素前后会带有换行符。
            inline  此元素会被显示为内联元素，元素前后没有换行符。
            inline-block    行内块元素                
 -->
